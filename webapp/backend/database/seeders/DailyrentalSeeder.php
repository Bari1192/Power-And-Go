<?php

namespace Database\Seeders;

use App\Models\Dailyrental;
use App\Models\Price;
use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;

class DailyrentalSeeder extends Seeder
{
    # Összes árazási kategória
    public function run(): void
    {
        $arazasok = Price::all(['id', 'auto_besorolas', 'elofiz_azon']);

        ### Tömeges beszúrás, a gyorsabb betöltés végett:
        ### ebbe bele az összes rekordot!
        $insertData = []; 

        foreach ($arazasok as $arazas) {
            $autoTipusok = range(1, 5);

            foreach ($autoTipusok as $tipus) {
                $prices = $this->napiBerlesAutokEsElofizAlapjan($arazas->elofiz_azon,$arazas->auto_besorolas);

                foreach ($prices as $nap => $ar) {
                    $insertData[] = [
                        'arazas_id' => $arazas->id,
                        'auto_tipus' => $tipus,
                        'napok' => $nap + 2, ## Csak a 2. naptól kellenek!
                        'ar' => $ar,
                    ];
                }
            }
        }
        Dailyrental::insert($insertData);
    }
    # Árak generálása az autókategória és előfizetési csoport alapján
    private function napiBerlesAutokEsElofizAlapjan($elofiz_azon,$auto_besorolas)
    {
        # MÁSODIK NAPTÓL VANNAK!
        $napiarak = [
            # [elofiz. besorolása]
            1 => [
                # 1-es autó besorolas [E-up - 18kw] típus
                # 2-es besorolas [Renault Kangoo - 33 kW] típus
                # 3-as besorolas [Citigo & E-up - 36 kW] típus
                # 4-es besorolas [Kia Niro - 65 kW] típus
                # 5-ös besorolas [ Opel Vivaro - 75 kW] típus
                1 => [35360, 53040, 70720, 88400, 106080, 123760, 141440, 159120, 176800, 194480, 212160, 229840, 247520, 265200, 282880, 300560, 318240, 335920, 353600],
                2 => [47360, 71040, 94720, 118400, 142080, 165760, 189440, 213120, 236800, 260480, 284160, 307840, 331520, 355200, 378880, 402560, 426240, 449920, 473600],
                3 => [34610, 51790, 67770, 83400, 99130, 114910, 130730, 146410, 162050, 177680, 193330, 209030, 224670, 240550, 256250, 272080, 288070, 304060, 320050],
                4 => [50360, 75090, 99520, 123400, 146880, 170660, 194480, 218160, 241800, 265430, 289080, 312780, 336420, 360300, 384000, 407830, 431820, 455810, 479800],
                5 => [44356, 66084, 87512, 108390, 128868, 149646, 170464, 191142, 211780, 232408, 253056, 273754, 294392, 315270, 335968, 356796, 377784, 398772, 419760],
            ],
            ## 2-es előfizetés napi árak
            2 => [
                1 => [29360, 44040, 58720, 73400, 88080, 102760, 117440, 132120, 146800, 161480, 176160, 190840, 205520, 220200, 234880, 249560, 264240, 278920, 293600],
                2 => [41360, 62040, 82720, 103400, 124080, 144760, 165440, 186120, 206800, 227480, 248160, 268840, 289520, 310200, 330880, 351560, 372240, 392920, 413600],
                3 => [28510, 42690, 55670, 68300, 81030, 93810, 106630, 119310, 131950, 144580, 157230, 169930, 182570, 195450, 208150, 220980, 233970, 246960, 259950],
                4 => [44360, 66090, 87520, 108400, 128880, 149660, 170480, 191160, 211800, 232430, 253080, 273780, 294420, 315300, 336000, 356830, 377820, 398810, 419800],
                5 => [39256, 58434, 77312, 95640, 113568, 131796, 150064, 168192, 186280, 204358, 222456, 240604, 258692, 277020, 295168, 313446, 331884, 350322, 368760],
            ],
            ## 3-as előfizetés napi árak
            3 => [
                1 => [29360, 44040, 58720, 73400, 88080, 102760, 117440, 132120, 146800, 161480, 176160, 190840, 205520, 220200, 234880, 249560, 264240, 278920, 293600],
                2 => [41360, 62040, 82720, 103400, 124080, 144760, 165440, 186120, 206800, 227480, 248160, 268840, 289520, 310200, 330880, 351560, 372240, 392920, 413600],
                3 => [28510, 42690, 55670, 68300, 81030, 93810, 106630, 119310, 131950, 144580, 157230, 169930, 182570, 195450, 208150, 220980, 233970, 246960, 259950],
                4 => [44360, 66090, 87520, 108400, 128880, 149660, 170480, 191160, 211800, 232430, 253080, 273780, 294420, 315300, 336000, 356830, 377820, 398810, 419800],
                5 => [39256, 58434, 77312, 95640, 113568, 131796, 150064, 168192, 186280, 204358, 222456, 240604, 258692, 277020, 295168, 313446, 331884, 350322, 368760],
            ],
            ## 4-es előfizetés napi árak
            4 => [
                1 => [27360, 41040, 54720, 68400, 82080, 95760, 109440, 123120, 136800, 150480, 164160, 177840, 191520, 205200, 218880, 232560, 246240, 259920, 273600],
                2 => [39360, 59040, 78720, 98400, 118080, 137760, 157440, 177120, 196800, 216480, 236160, 255840, 275520, 295200, 314880, 334560, 354240, 373920, 393600],
                3 => [26460, 39640, 51620, 63250, 74980, 86760, 98580, 110260, 121900, 133530, 145180, 156880, 168520, 180400, 192100, 203930, 215920, 227910, 239900],
                4 => [40360, 60090, 79520, 98400, 116880, 135660, 154480, 173160, 191800, 210430, 229080, 247780, 266420, 285300, 304000, 322830, 341820, 360810, 379800],
                5 => [37556, 55884, 73912, 91390, 108468, 125846, 143264, 160542, 177780, 195008, 212256, 229554, 246792, 264270, 281568, 298996, 316584, 334172, 351760],
            ],
        ];
        return $napiarak[$elofiz_azon][$auto_besorolas];
    }
}
